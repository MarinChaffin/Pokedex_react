{"ast":null,"code":"var _jsxFileName = \"/Users/marinchaffin/Documents/Pokedex/YoutubePokedex-master/src/Pokemon.jsx\";\n\n/* eslint-disable jsx-a11y/alt-text */\nimport React, { useEffect, useState } from \"react\";\nimport { Typography, Link, CircularProgress, Button } from \"@material-ui/core\";\nimport { toFirstCharUppercase } from \"./constants\";\nimport axios from \"axios\";\n\nconst Pokemon = props => {\n  const {\n    match,\n    history\n  } = props;\n  const {\n    params\n  } = match;\n  const {\n    pokemonId\n  } = params;\n  const [pokemon, setPokemon] = useState(undefined);\n  useEffect(() => {\n    axios.get(`https://pokeapi.co/api/v2/pokemon/${pokemonId}/`).then(function (response) {\n      const {\n        data\n      } = response;\n      setPokemon(data);\n    }).catch(function (error) {\n      setPokemon(false);\n    });\n  }, [pokemonId]);\n\n  const generatePokemonJSX = pokemon => {\n    const {\n      name,\n      id,\n      species,\n      height,\n      weight,\n      types\n    } = pokemon;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }\n    }, `${id}.`, \" \", toFirstCharUppercase(name)), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }\n    }, \"Pokemon Info\"), /*#__PURE__*/React.createElement(Typography, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }\n    }, \"Species: \", /*#__PURE__*/React.createElement(Link, {\n      href: species.url,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }\n    }, species.name, \" \")), /*#__PURE__*/React.createElement(Typography, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }\n    }, \"Height: \", height, \" \"), /*#__PURE__*/React.createElement(Typography, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }\n    }, \"Weight: \", weight, \" \"), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }\n    }, \" Types:\"), types.map(typeInfo => {\n      const {\n        type\n      } = typeInfo;\n      const {\n        name\n      } = type;\n      return /*#__PURE__*/React.createElement(Typography, {\n        key: name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 18\n        }\n      }, \" \", `${name}`);\n    }));\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, pokemon === undefined && /*#__PURE__*/React.createElement(CircularProgress, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 33\n    }\n  }), pokemon !== undefined && pokemon && generatePokemonJSX(pokemon), pokemon === false && /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 29\n    }\n  }, \" Pokemon not found\"), pokemon !== undefined && /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    onClick: () => history.push(\"/\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, \"back to pokedex\"));\n};\n\nexport default Pokemon;","map":{"version":3,"sources":["/Users/marinchaffin/Documents/Pokedex/YoutubePokedex-master/src/Pokemon.jsx"],"names":["React","useEffect","useState","Typography","Link","CircularProgress","Button","toFirstCharUppercase","axios","Pokemon","props","match","history","params","pokemonId","pokemon","setPokemon","undefined","get","then","response","data","catch","error","generatePokemonJSX","name","id","species","height","weight","types","url","map","typeInfo","type","push"],"mappings":";;AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,UAAT,EAAqBC,IAArB,EAA2BC,gBAA3B,EAA6CC,MAA7C,QAA2D,mBAA3D;AACA,SAASC,oBAAT,QAAqC,aAArC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AACzB,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAqBF,KAA3B;AACA,QAAM;AAAEG,IAAAA;AAAF,MAAaF,KAAnB;AACA,QAAM;AAAEG,IAAAA;AAAF,MAAgBD,MAAtB;AACA,QAAM,CAACE,OAAD,EAAUC,UAAV,IAAwBd,QAAQ,CAACe,SAAD,CAAtC;AAEAhB,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,KAAK,CACFU,GADH,CACQ,qCAAoCJ,SAAU,GADtD,EAEGK,IAFH,CAEQ,UAAUC,QAAV,EAAoB;AACxB,YAAM;AAAEC,QAAAA;AAAF,UAAWD,QAAjB;AACAJ,MAAAA,UAAU,CAACK,IAAD,CAAV;AACD,KALH,EAMGC,KANH,CAMS,UAAUC,KAAV,EAAiB;AACtBP,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KARH;AASD,GAVQ,EAUN,CAACF,SAAD,CAVM,CAAT;;AAYA,QAAMU,kBAAkB,GAAIT,OAAD,IAAa;AACtC,UAAM;AAAEU,MAAAA,IAAF;AAAQC,MAAAA,EAAR;AAAYC,MAAAA,OAAZ;AAAqBC,MAAAA,MAArB;AAA6BC,MAAAA,MAA7B;AAAqCC,MAAAA;AAArC,QAA+Cf,OAArD;AAGA,wBACE,uDACE,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,GAAEW,EAAG,GADT,OACcnB,oBAAoB,CAACkB,IAAD,CADlC,CADF,eAKE,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBALF,eAME,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,WADH,eAEE,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAEE,OAAO,CAACI,GAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0BJ,OAAO,CAACF,IAAlC,MAFF,CANF,eAUE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAqBG,MAArB,MAVF,eAWE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAqBC,MAArB,MAXF,eAYE,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAZF,EAaGC,KAAK,CAACE,GAAN,CAAWC,QAAD,IAAc;AACvB,YAAM;AAAEC,QAAAA;AAAF,UAAWD,QAAjB;AACA,YAAM;AAAER,QAAAA;AAAF,UAAWS,IAAjB;AACA,0BAAO,oBAAC,UAAD;AAAY,QAAA,GAAG,EAAET,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAA0B,GAAEA,IAAK,EAAjC,CAAP;AACD,KAJA,CAbH,CADF;AAqBD,GAzBD;;AA2BA,sBACE,0CACGV,OAAO,KAAKE,SAAZ,iBAAyB,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAD5B,EAEGF,OAAO,KAAKE,SAAZ,IAAyBF,OAAzB,IAAoCS,kBAAkB,CAACT,OAAD,CAFzD,EAGGA,OAAO,KAAK,KAAZ,iBAAqB,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAHxB,EAKGA,OAAO,KAAKE,SAAZ,iBACC,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,WAAhB;AAA4B,IAAA,OAAO,EAAE,MAAML,OAAO,CAACuB,IAAR,CAAa,GAAb,CAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBANJ,CADF;AAaD,CA1DD;;AA4DA,eAAe1B,OAAf","sourcesContent":["/* eslint-disable jsx-a11y/alt-text */\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Typography, Link, CircularProgress, Button } from \"@material-ui/core\";\r\nimport { toFirstCharUppercase } from \"./constants\";\r\nimport axios from \"axios\";\r\n\r\nconst Pokemon = (props) => {\r\n  const { match, history } = props;\r\n  const { params } = match;\r\n  const { pokemonId } = params;\r\n  const [pokemon, setPokemon] = useState(undefined);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(`https://pokeapi.co/api/v2/pokemon/${pokemonId}/`)\r\n      .then(function (response) {\r\n        const { data } = response;\r\n        setPokemon(data);\r\n      })\r\n      .catch(function (error) {\r\n        setPokemon(false);\r\n      });\r\n  }, [pokemonId]);\r\n\r\n  const generatePokemonJSX = (pokemon) => {\r\n    const { name, id, species, height, weight, types } = pokemon;\r\n\r\n\r\n    return (\r\n      <>\r\n        <Typography variant=\"h1\">\r\n          {`${id}.`} {toFirstCharUppercase(name)}\r\n\r\n        </Typography>\r\n        <Typography variant=\"h3\">Pokemon Info</Typography>\r\n        <Typography>\r\n          {\"Species: \"}\r\n          <Link href={species.url}>{species.name} </Link>\r\n        </Typography>\r\n        <Typography>Height: {height} </Typography>\r\n        <Typography>Weight: {weight} </Typography>\r\n        <Typography variant=\"h6\"> Types:</Typography>\r\n        {types.map((typeInfo) => {\r\n          const { type } = typeInfo;\r\n          const { name } = type;\r\n          return <Typography key={name}> {`${name}`}</Typography>;\r\n        })}\r\n      </>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {pokemon === undefined && <CircularProgress />}\r\n      {pokemon !== undefined && pokemon && generatePokemonJSX(pokemon)}\r\n      {pokemon === false && <Typography> Pokemon not found</Typography>}\r\n\r\n      {pokemon !== undefined && (\r\n        <Button variant=\"contained\" onClick={() => history.push(\"/\")}>\r\n          back to pokedex\r\n        </Button>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Pokemon;\r\n"]},"metadata":{},"sourceType":"module"}